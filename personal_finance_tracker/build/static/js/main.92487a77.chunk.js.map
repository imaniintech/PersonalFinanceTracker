{"version":3,"sources":["components/firebase/Firebase.js","components/forms/LoginPage.jsx","components/forms/RegisterPage.jsx","components/TransactionList.jsx","components/forms/PersonalTracker.jsx","components/MainInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase1","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","LoginPage","state","email","password","errorsInFireBase","handleChange","e","setState","target","name","value","signIn","preventDefault","auth","signInWithEmailAndPassword","catch","error","message","className","htmlFor","type","placeholder","onChange","this","onClick","Component","RegisterPage","fistName","lastName","registerAccount","createUserWithEmailAndPassword","then","user","currentUser","update","firstName","TransactionList","props","amount","PersonalTracker","nameOfTransaction","amountOfTransaction","transactionType","currentUserID","uid","availableMoney","transactionList","signOut","input","addANewTransaction","transactionState","push","newID","length","currentID","database","ref","data","console","log","parseFloat","totalAmount","once","grabItemInfo","forEach","item","val","Object","keys","map","id","MainInfo","userLoggedIn","loading","changeForms","switchForm","listenForAuth","onAuthStateChanged","undefined","toggleForms","App","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92487a77.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyD_KNhGUen5Bd-GoMACQdZwpOsG_Gzsk-0\",\n    authDomain: \"personal-finance-tracker-ba879.firebaseapp.com\",\n    projectId: \"personal-finance-tracker-ba879\",\n    storageBucket: \"personal-finance-tracker-ba879.appspot.com\",\n    messagingSenderId: \"159565724613\",\n    appId: \"1:159565724613:web:8783f32af59991e199a9ac\",\n    measurementId: \"G-BKM0VTWX73\"\n}\n\nconst firebase1 = firebase.initializeApp(config)\nexport default firebase1;","import React, { Component } from 'react';\nimport firebase1 from '../firebase/Firebase';\n\n\nclass LoginPage extends Component {\n\n\n    state = {\n        email: '',\n        password: '',\n        errorsInFireBase: ''\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    signIn = e => {\n        e.preventDefault()\n        firebase1.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n            .catch((error) => {\n                this.setState({ errorsInFireBase: error.message })\n            })\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <form className=\"loginForm\">\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\"></label>\n                        <input type=\"text\" className=\"email\" placeholder=\"Email\" name=\"email\"\n                            onChange={this.handleChange} value={this.state.email}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\"></label>\n                        <input type=\"text\" className=\"password\" placeholder=\"Password\" type=\"password\" name=\"password\" onChange={this.handleChange} value={this.state.password}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input onClick={this.signIn} type=\"submit\" className=\"submitButton\" value=\"Submit\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default LoginPage;","import React, { Component } from 'react';\nimport firebase1 from '../firebase/Firebase';\n\n\nclass RegisterPage extends Component {\n\n\n    state = {\n        fistName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        errorsInFireBase: ''\n    };\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n\n    registerAccount = e => {\n        e.preventDefault();\n        firebase1.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((user) => {\n            let currentUser = firebase1.auth().currentUser;\n            currentUser.update({\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n                password: this.state.password\n\n            })\n        }).catch((error) => {\n            this.setState({ errorsInFireBase: error.message })\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"loginForm\">\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"firstName\"></label>\n                        <input type=\"text\" className=\"firstName\" placeholder=\"First Name\" name=\"firstName\"\n                            onChange={this.handleChange} value={this.state.firstName}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"lastName\"></label>\n                        <input type=\"text\" className=\"lastName\" placeholder=\"Last Name\" name=\"lastName\"\n                            onChange={this.handleChange} value={this.state.lastName}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\"></label>\n                        <input type=\"text\" className=\"email\" placeholder=\"Email\" name=\"email\"\n                            onChange={this.handleChange} value={this.state.email}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\"></label>\n                        <input type=\"text\" className=\"password\" placeholder=\"Password\" type=\"password\" name=\"password\"\n                            onChange={this.handleChange} value={this.state.password}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input onClick={this.registerAccount} type=\"submit\" className=\"submitButton\" value=\"Submit\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default RegisterPage;","import React from 'react';\n\n\nconst TransactionList = props => {\n\n    return (\n        <div>\n            <li>\n                <div>{props.name}</div>\n                <div>\n                    {props.type === 'deposit' ? (\n                        <div className=\"deposits\"> +{props.amount}</div>\n                    ) : (\n                        <div className=\"expenses\"> -{props.amount}</div>\n                    )}\n                </div>\n            </li>\n        </div>\n    )\n\n};\n\nexport default TransactionList;","import React, { Component } from 'react';\nimport firebase1 from '../firebase/Firebase';\nimport TransactionList from '../TransactionList';\n\n\nclass PersonalTracker extends Component {\n\n    state = {\n        nameOfTransaction: '',\n        amountOfTransaction: '',\n        transactionType: '',\n        currentUserID: firebase1.auth().currentUser.uid,\n        availableMoney: 0,\n        transactionList: []\n\n    }\n\n    signOut = () => {\n        firebase1.auth().signOut()\n    }\n\n\n\n\n\n    handleChange = input => e => {\n        this.setState({\n            [input]: e.target.value !== '0' ? e.target.value : ''\n        });\n    };\n\n\n\n\n    componentWillMount() {\n\n\n        const { currentUserID, availableMoney } = this.state;\n        let totalAmount = availableMoney;\n        const transactionState = this.state.transactionList;\n        firebase1.database().ref('TransactionList/' + currentUserID).once('value', (grabItemInfo) => {\n            // console.log(grabItemInfo);\n            grabItemInfo.forEach((item) => {\n\n                totalAmount =\n                    item.val().type === 'deposit' ? parseFloat(item.val().amountOfTransaction) + totalAmount : totalAmount - parseFloat(item.val().amountOfTransaction);\n\n                transactionState.push({\n                    newID: grabItemInfo.val().newID,\n                    name: grabItemInfo.val().name,\n                    amount: grabItemInfo.val().amount,\n                    type: grabItemInfo.val().type,\n                    currentID: grabItemInfo.val().currentID\n                });\n            });\n\n\n            this.setState({\n                transactionList: transactionState,\n                amount: totalAmount\n            })\n        })\n    }\n\n\n    addANewTransaction = () => {\n        const {\n            nameOfTransaction,\n            amountOfTransaction,\n            transactionType,\n            currentUserID,\n            availableMoney\n        } = this.state;\n\n        if (nameOfTransaction && amountOfTransaction && transactionType) {\n            const transactionState = this.state.transactionList\n            transactionState.push({\n                newID: transactionState.length + 1,\n                name: nameOfTransaction,\n                amount: amountOfTransaction,\n                type: transactionType,\n                currentID: currentUserID,\n            })\n            // console.log(transactionState);\n            firebase1.database().ref('TransactionList/' + currentUserID).push({\n                newID: transactionState.length,\n                name: nameOfTransaction,\n                amount: amountOfTransaction,\n                type: transactionType,\n                currentID: currentUserID\n            }).then((data) => {\n                ///used to receive callback\n                console.log(\"callback went through successfully\");\n\n                this.setState({\n                    nameOfTransaction: '',\n                    amountOfTransaction: '',\n                    transactionType: '',\n                    transactionList: transactionState,\n                    availableMoney: transactionType === 'deposit' ? availableMoney + parseFloat(amountOfTransaction) : availableMoney - parseFloat(amountOfTransaction),\n                })\n            }).catch((error) => {\n                console.log(\"There's an error: \", error);\n            })\n        }\n    };\n\n\n\n\n\n\n\n\n    render() {\n\n\n        return (\n            <div className=\"personalTracker\">\n\n                <div className=\"dashboard\">\n                    <h4 className=\"welcome\">Welcome!</h4>\n                    <button className=\"signOut\" onClick={this.signOut}>Sign Out</button>\n                </div>\n\n                <div className=\"total\"><h5>${this.state.availableMoney}</h5></div>\n\n                <div className=\"transactionForm\">\n                    <div className=\"newTransactionInfo\">\n\n                        <form>\n                            <input placeholder=\"Transaction Name\" type=\"text\" name=\"nameOfTransaction\"\n                                onChange={this.handleChange('nameOfTransaction')} value={this.state.nameOfTransaction} />\n\n                            <div className=\"transCluster\">\n                                <select name=\"type\"\n                                    onChange={this.handleChange('transactionType')} value={this.state.transactionType}>\n                                    <option value=\"0\">Transaction Type?</option>\n                                    <option value=\"deposit\">Deposit</option>\n                                    <option value=\"expense\">Expense</option>\n                                </select>\n                                <input placeholder=\"Amount\" type=\"text\" name=\"amountOfTransaction\"\n                                    onChange={this.handleChange('amountOfTransaction')} value={this.state.amountOfTransaction} />\n                            </div>\n                        </form>\n\n\n                        <button className=\"addANewTransaction\" onClick={() => this.addANewTransaction()}> Add Transaction</button>\n\n                    </div>\n                </div>\n\n                <div className=\"allTransactions\">\n                    <h4 className=\"list\">List of Transactions</h4>\n                    <ul>\n                        {\n                            Object.keys(this.state.transactionList).map((id) => (\n                                <TransactionList key={id}\n                                    type={this.state.transactionList[id].type}\n                                    name={this.state.transactionList[id].name}\n                                    amount={this.state.transactionList[id].amount}\n                                />\n                            ))\n                        }\n                        {/* <li>\n                            <div>Deposit</div>\n                            <div> +20 </div>\n                        </li> */}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PersonalTracker;","import React, { Component } from 'react';\nimport firebase1 from './firebase/Firebase';\nimport LoginPage from './forms/LoginPage';\nimport RegisterPage from './forms/RegisterPage';\nimport PersonalTracker from './forms/PersonalTracker';\n\n\nclass MainInfo extends Component {\n\n\n\n    state = {\n        userLoggedIn: 1,\n        loading: true,\n        changeForms: false //shows login first -will be able to set an if statement\n    };\n\n    componentDidMount() {\n        this.listenForAuth();\n    };\n\n    listenForAuth() {\n        firebase1.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ user })\n            } else {\n                this.setState({ user: undefined })\n            }\n        });\n    }\n\n\n    changeForms = (switchForm) => {\n        // console.log(switchForm);\n        this.setState({ changeForms: switchForm === 'registerAccount' ? true : false })\n    };\n\n    render() {\n        const toggleForms = !this.state.changeForms ? <LoginPage /> : <RegisterPage />\n\n\n\n        return (\n            <div>\n                {!this.state.user ?\n                    < div className=\"mainInfo\" >\n                        {toggleForms}\n                        {/* <LoginPage /> */}\n                        {!this.state.changeForms ?\n                            (\n                                < div className=\"accountSetup\">\n                                    Don't have an account? <button onClick={() => this.changeForms(!this.state.changeForms ? 'registerAccount' : 'loginAccount')} className=\"signUp\">Sign Up</button>\n                                </div>\n                            ) : (\n                                < div className=\"accountSetup\">\n                                    Already have an account? <button onClick={() => this.changeForms(!this.state.changeForms ? 'registerAccount' : 'loginAccount')} className=\"signUp\">Sign In</button>\n                                </div>\n                            )\n                        }\n                    </div > : <PersonalTracker />\n                }\n            </div >\n\n\n        )\n    }\n};\n\nexport default MainInfo;","import React from 'react';\nimport MainInfo from './components/MainInfo';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <MainInfo />\n      </div>\n    )\n  }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}